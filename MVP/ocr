#!/usr/bin/env groovy
import java.util.regex.*

String home() { System.properties['user.home'] }
String recordings() { home() +'/recordings' }
boolean isScreenShot(String name) {  name.startsWith("Screen Shot") && name.endsWith("png")  }
String date(String name) {
    name.substring(12,22)
}
String time(String name) { name.split('at')[1].split('M')[0] }
String dir(String name) {
    String[] d = date(name).split("-")
    String[] t = time(name).split(Pattern.quote("."))
    recordings() + '/' + d[0] + '/' + d[1] + '/' + d[2] + '/' + t[0].trim()
}
String timeString(String name) {
    name.substring(12,name.length()-4).replace(' ','_').replace('_at_','_')
}
String screenshot(String name) { recordings() + '/' + name }
String outputbase(String name) { dir(name) + '/' + timeString(name) }
void ensureDirectoryExists(String name) { new File(dir(name)).mkdirs() }
void exec(String command,String arg1,String arg2) {
    Process proc = new ProcessBuilder(command,arg1,arg2).start()
    def outputStream = new StringBuffer()
    proc.waitForProcessOutput(outputStream, System.err)
    println outputStream
}

void ocr(String name) {
    exec("tesseract",screenshot(name),outputbase(name))
}

void move(String name) {
    exec("mv",screenshot(name),outputbase(name + '.png'))
}

for (f in new File(recordings()).listFiles()) {
    String name = f.name
    if (isScreenShot(name)) {
        ensureDirectoryExists(name)
        ocr(name)
        move(name)
    }
}